{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\kickvillage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\kickvillage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\kickvillage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\kickvillage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\kickvillage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\kickvillage\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\kickvillage\\\\src\\\\components\\\\infoForm\\\\infoForm.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: 50px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nvar Option = _Select.Option;\nvar StyledFormItem = styled(_Form.Item)(_templateObject());\n\nfunction hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(function (field) {\n    return fieldsError[field];\n  });\n}\n\nvar InfoForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InfoForm, _Component);\n\n  function InfoForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InfoForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InfoForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(InfoForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // To disabled submit button at the beginning.\n      this.props.form.validateFields();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 16\n          },\n          sm: {\n            span: 4\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 8\n          },\n          sm: {\n            span: 6\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '010'\n      })(React.createElement(_Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"011\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"011\"), React.createElement(Option, {\n        value: \"016\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"016\"), React.createElement(Option, {\n        value: \"017\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"017\"), React.createElement(Option, {\n        value: \"018\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"018\"), React.createElement(Option, {\n        value: \"019\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"019\")));\n      return React.createElement(_Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(StyledFormItem, {\n        label: \"\\uC774\\uB984\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, getFieldDecorator('name', {\n        rules: [{\n          type: 'string',\n          message: 'The input is not valid E-mail!'\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(StyledFormItem, {\n        label: \"\\uC5F0\\uB77D\\uCC98\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, getFieldDecorator('phone', {\n        rules: [{\n          message: 'Please input your phone number!'\n        }]\n      })(React.createElement(_Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))), React.createElement(StyledFormItem, {\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          message: 'Please input your password!'\n        }]\n      })(React.createElement(_Input.Password, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(_Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"\\uBCC0\\uACBD\")));\n    }\n  }]);\n\n  return InfoForm;\n}(Component);\n\nexport default _Form.create({\n  name: 'infoForm'\n})(InfoForm);","map":{"version":3,"sources":["C:\\Users\\user\\Documents\\GitHub\\kickvillage\\src\\components\\infoForm\\infoForm.js"],"names":["React","Component","styled","Option","StyledFormItem","Item","hasErrors","fieldsError","Object","keys","some","field","InfoForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","prefixSelector","initialValue","width","rules","type","message","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Form, Icon, Input, Button, Select } from 'antd';\nconst { Option } = Select;\n\nconst StyledFormItem = styled(Form.Item)`\n    font-size: 50px;\n`\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass InfoForm extends Component {\n\n    componentDidMount() {\n        // To disabled submit button at the beginning.\n        this.props.form.validateFields();\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n\n    render() {\n\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 16 },\n                sm: { span: 4 },\n            },\n            wrapperCol: {\n                xs: { span: 8 },\n                sm: { span: 6 },\n            },\n        };\n\n        const prefixSelector = getFieldDecorator('prefix', {\n            initialValue: '010',\n        })(\n            <Select style={{ width: 70 }}>\n                <Option value=\"011\">011</Option>\n                <Option value=\"016\">016</Option>\n                <Option value=\"017\">017</Option>\n                <Option value=\"018\">018</Option>\n                <Option value=\"019\">019</Option>\n            </Select>,\n        );\n\n        return (\n\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n\n                <StyledFormItem label=\"이름\">\n                    {getFieldDecorator('name', {\n                        rules: [\n                            {\n                                type: 'string',\n                                message: 'The input is not valid E-mail!',\n                            },\n                        ],\n                    })(<Input />)}\n                </StyledFormItem>\n\n                <StyledFormItem label=\"연락처\">\n                    {getFieldDecorator('phone', {\n                        rules: [{ message: 'Please input your phone number!' }],\n                    })(<Input addonBefore={prefixSelector} style={{ width: '100%' }} />)}\n                </StyledFormItem>\n\n                <StyledFormItem label=\"비밀번호\">\n                    {getFieldDecorator('password', {\n                        rules: [\n                            {\n                                message: 'Please input your password!',\n                            }\n                        ],\n                    })(<Input.Password />)}\n                    <Button type=\"primary\">\n                        변경\n                    </Button>\n                </StyledFormItem>\n            </Form>\n        );\n    }\n}\n\nexport default Form.create({ name: 'infoForm' })(InfoForm);"]},"metadata":{},"sourceType":"module"}